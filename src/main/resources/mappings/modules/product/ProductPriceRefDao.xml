<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uib.ecmanager.modules.product.dao.ProductPriceRefDao">
    
	<sql id="productPriceRefColumns">
		a.id AS "id",
		a.product_id AS "productId",
		a.sell_price AS "sellPrice",
		a.b_supply_price AS "bSupplyPrice",
		a.rank_id AS "rankId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="productPriceRefJoins">
	</sql>
    
	<select id="get" resultType="ProductPriceRef">
		SELECT 
			<include refid="productPriceRefColumns"/>
		FROM product_price_ref a
		<include refid="productPriceRefJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ProductPriceRef">
		SELECT 
			<include refid="productPriceRefColumns"/>
		FROM product_price_ref a
		<include refid="productPriceRefJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ProductPriceRef">
		SELECT 
			<include refid="productPriceRefColumns"/>
		FROM product_price_ref a
		<include refid="productPriceRefJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO product_price_ref(
			id,
			product_id,
			sell_price,
			b_supply_price,
			rank_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{productId},
			#{sellPrice},
			#{bSupplyPrice},
			#{rankId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE product_price_ref SET 	
			product_id = #{productId},
			sell_price = #{sellPrice},
			b_supply_price = #{bSupplyPrice},
			rank_id = #{rankId},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE product_price_ref SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!-- 根据商品id删除关联价格 -->
	<update id="deleteByProductId">
		DELETE FROM product_price_ref WHERE product_id = #{productId}
	</update>
</mapper>